# -*- coding: utf-8 -*-
"""functionality1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T_y1D2oJbAJcoY40HXEt4wdpayIJFN44
"""

import json
import requests
from datetime import datetime



# base url of my firebase project's realtime database
fb_url = "https://dsci551-project-parking-app-default-rtdb.firebaseio.com/"
json_ext = ".json"

# functionality 1
# updating availability based on user input

# based on front-end output
def update_availability(parking_loc_id, update):
    now = datetime.now()

    # check if 1 is written as 01 ???
    availabilityD = {"availability": update, "update time": str(now)[11:-10], "updated": True}

    # converting dictionary into a string
    availability_json = json.dumps(availabilityD)

    patch = requests.patch(fb_url + str(parking_loc_id) + json_ext, availability_json)

# based on user input 
# loc_idx_to_update should be a number corresponding to the parking location index (at our Database) 
loc_idx_to_update = 217
update_availability(loc_idx_to_update, False)



# daily reset 
# scheduled to execute daily using Mac cronjobs

def daily_reset():
    get = requests.get(fb_url + json_ext)
    parking_locsL = get.json()
    updatedL = [loc_i for loc_i in range(len(parking_locsL)) if parking_locsL[loc_i]["availability"] == False]
    
    for parking_loc_id in updatedL:
        availabilityD = {"availability": True}
        availability_json = json.dumps(availabilityD)
        patch = requests.patch(fb_url + str(parking_loc_id) + json_ext, availability_json)
        
        # can two deletion be done at once
        delete = requests.delete(fb_url + str(parking_loc_id) + "/update time" + json_ext)
        delete = requests.delete(fb_url + str(parking_loc_id) + "/updated" + json_ext)

# daily_reset()







