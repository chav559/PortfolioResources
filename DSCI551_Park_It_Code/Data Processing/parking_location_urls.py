# -*- coding: utf-8 -*-
"""Parking_Location_URLs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14D8LW-4MUuAIjEztNyFf_dxXErxCPptX
"""

from bs4 import BeautifulSoup
import requests
import sqlite3
import time
from tqdm import tqdm



# 90028, 90038, 90004

headers = {'User-Agent':
           'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36'}

# response = request_retry(url)

response = requests.get(url, headers=headers)

soup = BeautifulSoup(response.content, 'html.parser')

domain = "https://en.parkopedia.com"



from selenium import webdriver
from selenium.webdriver.common.keys import Keys 
import time



from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By

from selenium.webdriver.common.by import By

import undetected_chromedriver as uc
from selenium import webdriver

import undetected_chromedriver as uc
from selenium import webdriver

options = webdriver.ChromeOptions() 
driver = uc.Chrome(options=options)

driver.get(url)

driver.maximize_window()
time.sleep(5)

# closing cookies popup
WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "a.btn-close"))).click()

# clicking on street parking
WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//button[text()='Street']"))).click()

html = driver.page_source 

  
# this renders the JS code and stores all 
# of the information in static HTML code. 

  
# Now, we could simply apply bs4 to html variable 

soup = BeautifulSoup(html, "html.parser") 
driver.close()





locations_elemL = soup.find_all("a", {"class": 'LocationListItem__containerLink'}, href=True)

location_urlL = []

count = 0
for location_elem in locations_elemL:
    count += 1
    print(count)
    print(location_elem["href"])
    
    location_urlL.append(domain + str(location_elem["href"]))
    
    print("\n")









driver = uc.Chrome(options=options)

# 16 url list
urlL = ["https://en.parkopedia.com/parking/locations/1710_highland_avenue_los_angeles_california_90028_united_states_1ggg9q5f50hd9z531c/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6811_leland_way_los_angeles_california_90028_united_states_h5i19q5cgphn4m9555/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6543_leland_way_los_angeles_california_90028_united_states_1gh49q5cgr0w2767b4/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6124_hollywood_boulevard_los_angeles_california_90028_united_states_96h59q5cgrzxt8edi5/?country=us&arriving=202203241800&leaving=202203242000",
        "https://en.parkopedia.com/parking/locations/6200_west_sunset_boulevard_los_angeles_california_90028_united_states_bb3b9q5cgrqbrdw6ba/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/1720_taft_avenue_los_angeles_california_90028_united_states_j61a9q5f58jurxw7ec/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/5734_west_sunset_boulevard_los_angeles_california_90028_united_states_743a9q5cgxmdwv22af/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6542_hollywood_boulevard_los_angeles_california_90028_united_states_747b9q5cgrbz1tkc8j/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/1135_north_highland_avenue_los_angeles_california_90038_united_states_a5ch9q5cgnhmbcmh9h/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6815_willoughby_avenue_los_angeles_california_90038_united_states_434f9q5cgj7um69g11/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/6611_santa_monica_boulevard_los_angeles_california_90038_united_states_54j49q5cgnpfzh4g29/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/willoughby_avenue_and_north_seward_street_los_angeles_california_90038_united_states_857b9q5cgm27v8b297/?country=us&arriving=202203241800&leaving=202203242000", 
        "https://en.parkopedia.com/parking/locations/vine_street_and_w_willoughby_ave_los_angeles_california_90038_united_states_e5f49q5cgmm5y4b80a/?country=us&arriving=202203241830&leaving=202203242030", 
        "https://en.parkopedia.com/parking/locations/844_north_ridgewood_place_los_angeles_california_90038_united_states_f6hc9q5cgtq121ebf8/?country=us&arriving=202203241830&leaving=202203242030", 
        "https://en.parkopedia.com/parking/locations/5721_santa_monica_boulevard_los_angeles_california_90038_united_states_88519q5cgwn1u69cb9/?country=us&arriving=202203241830&leaving=202203242030", 
        "https://en.parkopedia.com/parking/locations/vine_street_and_north_santa_monica_boulevard_los_angeles_california_90025_united_states_4g369q5cgqj0vwbie3/?country=us&arriving=202203242100&leaving=202203242300"]

parking_locationsL = []

count = 0
for url in urlL[8:]:
    for pType in ("garage", "street"):
        options = webdriver.ChromeOptions() 
        driver = uc.Chrome(options=options)
        
        driver.get(url) 
        
        if pType == "street":
            time.sleep(3)
            driver.maximize_window()
            
            time.sleep(3)
            # closing cookies popup
            WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "a.btn-close"))).click()
            
            time.sleep(3)
            # clicking on street parking
            WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, "//button[text()='Street']"))).click()

        html = driver.page_source 

        soup = BeautifulSoup(html, "html.parser") 
        driver.close()
        
        
        locations_elemL = soup.find_all("a", {"class": 'LocationListItem__containerLink'}, href=True)
        
        for location_elem in locations_elemL:
            parking_locationsL.append(domain + str(location_elem["href"]))


        time.sleep(3)
        count += 1
        
        if count == 8:
            time.sleep(7)
            count = 0



park_locL = []
for park_loc in parking_locL:
    if ("90028" in park_loc) or ("90038" in park_loc):
        park_locL.append(park_loc)

len(park_locL)





import pickle

with open ("parking_URLs", "wb") as f:
    pickle.dump(park_locL, f)



